'use client';
import { useContext, useEffect, type ReactNode } from 'react';
import { useRouter } from 'next/navigation';
import { AuthContext } from '@/context/auth-context';
import AppShell from '@/components/app-shell';
import Loading from '@/app/loading';

export default function EmployeeLayout({ children }: { children: ReactNode }) {
  const { user, loading } = useContext(AuthContext);
  const router = useRouter();

  // Debug logs
  console.log('üîç Employee Layout - user:', user);
  console.log('üîç Employee Layout - loading:', loading);

  useEffect(() => {
    console.log('üîÑ Employee Layout useEffect - loading:', loading, 'user:', user);
    
    // N·∫øu qu√° tr√¨nh x√°c th·ª±c ch∆∞a ho√†n t·∫•t, kh√¥ng l√†m g√¨ c·∫£.
    if (loading) {
      console.log('‚è≥ Still loading, waiting...');
      return;
    }

    // N·∫øu kh√¥ng c√≥ ng∆∞·ªùi d√πng, chuy·ªÉn h∆∞·ªõng v·ªÅ trang ƒëƒÉng nh·∫≠p.
    if (!user) {
      console.log('‚ùå No user found, redirecting to login');
      router.push('/login');
    } else {
      console.log('‚úÖ User found, showing content');
    }
  }, [loading, user, router]);

  // Hi·ªÉn th·ªã m√†n h√¨nh t·∫£i trong khi ch·ªù x√°c th·ª±c ho·∫∑c n·∫øu kh√¥ng c√≥ ng∆∞·ªùi d√πng (v√† ƒëang ƒë∆∞·ª£c chuy·ªÉn h∆∞·ªõng).
  if (loading || !user) {
    return <Loading />;
  }

  // N·∫øu c√≥ ng∆∞·ªùi d√πng, hi·ªÉn th·ªã layout v√† n·ªôi dung.
  return <AppShell>{children}</AppShell>;
}
